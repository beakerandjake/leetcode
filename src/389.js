/**
 * You are given two strings s and t.
 *
 * String t is generated by random shuffling string s and then add one more letter
 * at a random position.
 *
 * Return the letter that was added to t.
 *
 *
 *
 * Example 1:
 *
 *
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 *
 *
 * Example 2:
 *
 *
 * Input: s = "", t = "y"
 * Output: "y"
 *
 *
 *
 *
 * Constraints:
 *
 *  * 0 <= s.length <= 1000
 *  * t.length == s.length + 1
 *  * s and t consist of lowercase English letters.
 *
 *
 *
 * https://leetcode.com/problems/find-the-difference
 */

const charCounts = (str) =>
  [...str].reduce((acc, x) => acc.set(x, (acc.get(x) || 0) + 1), new Map());

/**
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
export const findTheDifference = (s, t) => {
  const sCounts = charCounts(s);
  const tCounts = charCounts(t);
  for (const [key, value] of tCounts) {
    if (!sCounts.has(key) || sCounts.get(key) < value) {
      return key;
    }
  }
};

import { minHeap } from '../src/heap.js';

describe('push()', () => {
  test.each([
    [[], 3, 3],
    [[122], 88, 88],
    [[122, 88], 67, 67],
    [[122, 88, 67], 245, 67],
    [[122, 88, 67, 245], 44, 44],
    [[122, 88, 67, 245, 44], 98, 44],
    [[122, 88, 67, 245, 44, 98], 56, 44],
    [[122, 88, 67, 245, 44, 98, 56], 37, 37],
    [[122, 88, 67, 245, 44, 98, 56, 37], 22, 22],
    [[122, 88, 67, 245, 44, 98, 56, 37, 22], 18, 18],
    [[122, 88, 67, 245, 44, 98, 56, 37, 22, 18], 5, 5],
  ])('heap: %p, insert: %d, min is: %d', (items, newItem, expected) => {
    const heap = minHeap(items);
    heap.push(newItem);
    expect(heap.peek()).toEqual(expected);
  });
});

describe('peek()', () => {
  test.each([
    [[], undefined],
    [[122], 122],
    [[122, 88], 88],
    [[122, 88, 67], 67],
    [[122, 88, 67, 245], 67],
    [[122, 88, 67, 245, 44], 44],
    [[122, 88, 67, 245, 44, 98], 44],
    [[122, 88, 67, 245, 44, 98, 56], 44],
    [[122, 88, 67, 245, 44, 98, 56, 37], 37],
    [[122, 88, 67, 245, 44, 98, 56, 37, 22], 22],
    [[122, 88, 67, 245, 44, 98, 56, 37, 22, 18], 18],
  ])('heap: %p, returns: %s', (items, expected) => {
    const heap = minHeap(items);
    expect(heap.peek()).toBe(expected);
  });
});

describe('pop()', () => {
  test.each([
    [[], undefined],
    [[3], 3],
    [[122, 88], 88],
    [[122, 88, 67], 67],
    [[122, 88, 67, 245], 67],
    [[122, 88, 44, 67, 245], 44],
    [[122, 88, 44, 67, 245, 98], 44],
    [[122, 88, 44, 67, 245, 98, 22], 22],
    [[122, 88, 67, 245, 44, 98, 56, 37], 37],
    [[122, 88, 16, 245, 44, 98, 56, 37, 22], 16],
    [[122, 88, 67, 245, 44, 98, 56, 37, 22, 18], 18],
    [[122, 88, 67, 245, 44, 4, 98, 56, 37, 22, 18], 4],
  ])('heap: %p, returns: %s', (items, expected) => {
    const heap = minHeap(items);
    expect(heap.pop()).toBe(expected);
  });
});

describe('update()', () => {
  test.each([
    [[], 6, 7, undefined],
    [[3], 3, 5, 5],
    [[122, 88], 88, 23, 23],
    [[122, 88, 67], 122, 188, 67],
    [[122, 88, 67, 245], 88, 10, 10],
    [[122, 88, 44, 67, 245], 245, 15, 15],
    [[122, 88, 44, 67, 245, 98], 44, 78, 67],
    [[122, 88, 44, 67, 245, 98, 22], 67, 21, 21],
    [[122, 88, 67, 245, 44, 98, 56, 37], 98, 477, 37],
    [[122, 88, 16, 245, 44, 98, 56, 37, 22], 22, 4, 4],
    [[122, 88, 67, 245, 44, 98, 56, 37, 22, 18], 245, 97, 18],
    [[122, 88, 67, 245, 44, 4, 98, 56, 37, 22, 18], 4, 282, 18],
  ])('heap: %p, update: %d to %d, min is: %s', (items, toUpdate, newValue, expected) => {
    const heap = minHeap(items);
    heap.update(toUpdate, newValue);
    if (heap.peek() != expected) {
      console.log(heap._items);
    }
    expect(heap.peek()).toBe(expected);
  });
});
